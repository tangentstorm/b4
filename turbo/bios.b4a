[ si 00 |                          # jump over bios
#--- begin bios -------------------\
:here si 03 rt                     # names for some important registers
:last si 04 rt
:ap   si 05 rt
:dbg  si 01 si 07 wm rt            # turn debugger on

:inc  si 01 ad rt
:dec  si 01 sb rt

:a+ ap rm du dr wm                 # a+ ( n - ) , writes a value to the
    rd inc ap wm rt                #    address in ap and increments ap.

:, here rm du dr wm
    rd inc here wm rt              # , is exact same thing for the heap

:buf                               # 64-character input buffer
  00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
  16 17 18 19 20 21 22 23 24 25 26 26 28 29 30 31
  32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
  48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63

:nl si 10 tw si 13 tw rt           # emit CRLF

:init $buf ap wm rt                # set ap = buf

:word rt                           # word handler (does nothing so far)

:exit nl si 01 ta                  # red
  si 'e tw si 'n tw si 'd tw       # echo 'end'
  nl hl

:b4>
  nl si 02 ta                      # green on black
  si 'b tw si '4 tw si '> tw       # echo 'b4>'
  si 02 ta si 32 tw si 07 ta       # gray on black for user input.
  rt rt                            # !! TODO: do i still need this? (it wasn't emitting the first one)

:eol 01                            # end of line flag

:repl { si 01 |
  [ $eol rm | si 00 $eol wm b4> ]  # show prompt if new line
  tr                               # read char from terminal
  [ du si 13 eq |                  # on enter,
    si 01 $eol wm word ]           # execute word (does nothing yet)
  [ du si 04 eq | exit ]           # on ^d, exit
  [ du si 31 lt | du a+ tw ] }   # copy non-ctrl chars to buffer and echo

# this should be compiled, but never execute:
hl ]
#--- end of bios ------------------/

# -- main --
si 15 { dec du | du ta si '. tw } zp # draw colors
init repl
