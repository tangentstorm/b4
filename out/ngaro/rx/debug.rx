  {{
    ".'\"x|^_OJR><#=@!+-*/AVX{}ZID[]W" string: opcodes
    : draw dup < 30 if putc else ;
    : cells ( an- ) [ @+ draw ] times ;
  ---reveal---
    : draw ( a- ) 16 [ 64 cells cr ] times ;
  }}

  : lit,, 1 , , ; immediate
  : jmp,, 8 , , ; immediate
  : nops, [ 0 , ] times ; immediate
  : (defer) here 2 nops, push ; immediate

  : break! ( aa- ) 8 !+ ! ;  ( write {jump to address in nos} to address in tos  )
  : begin ( R: -an ) here push ( top of loop ) 0 push ( break count ) ; compile-only
  : break pop 1+ (defer) push ; ( leave nops, increase break count )
  : leave break ; ( forth synonym )
  : loop 
      pop ( break count ) [ here 2 + pop break! ] times ( jump over the loopback )
      pop jmp,, ( loop back to top ) ; compile-only

  constant registers
  hex 
  decimal

  : here 
  : ifso (defer) here push ;
  : while startloop ;
  : do    ( f- ) ifso ; 
  : wend  (  - ) else break then ;

  : repeat startloop ;
  : ifso  ( f- ) defer ; push return ;
  : until ( f- ) ifso break else again then ; 

  ( enlish style )
  begin
  break leave
  again
  until

